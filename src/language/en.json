{
    "title1": "Using the File System Module in Node.js (With Samples)",
    "title2": "Opening File",
    "title3": "Writing File",
    "title4": "Reading File",
    "title5": "Removing File",
    "paragraph1": "File system related operations of Node.js platform are done through fs module. Node.js works asynchronously the fs module works asynchronously accordingly but almost all functions have synchronous versions.",
    "paragraph2": "Using the fs module, we can implement following operations:",
    "paragraph3": "Opening File",
    "paragraph4": "Writing File",
    "paragraph5": "Reading File",
    "paragraph6": "Removing File",
    "paragraph7": "fs.open() method is used to open files asynchronously and fs.openSync() method is used to open files synchronously on your computer. fs.open() has at least 3 parameters:",
    "paragraph8": "Parameter : File path",
    "paragraph9": "Parameter : Flag",
    "paragraph10": "Parameter : Calback function",
    "paragraph11": "Let's continue with code sample below but first, let's create the test.txt in the directory where the JavaScript file is path",
    "paragraph12": "There is an important point I would like to mention here. You can see what the flags are doing on the table below:",
    "paragraph13": "fs.writeFile() method is used to write files asynchronously and fs.readFileSync() method is used to write files synchronously on your computer. fs.writeFile() function has at least 3 parameters:",
    "paragraph14": "Parameter : File path",
    "paragraph15": "Parameter : Data to be written into the file",
    "paragraph16": "Parameter : callback function",
    "paragraph17": "Optional Parameter : Encoding type",
    "paragraph18": "It should definitely not be forgotten. If the file path is to be written, it should be written starting from the root directory. If you use the path module for this, it is easier.",
    "paragraph19": "fs.readFile() method is used to read files asynchronously and fs.readFileSync() method is used to read files synchronously on your computer. fs.readFile() function has at least 2 parameters:",
    "paragraph20": "Parameter : File path",
    "paragraph21": "Parameter : Callback function",
    "paragraph22": "Optional Parameter : Encoding type",
    "paragraph23": "Congratulations! You performed the first successful operation with the fs module. When the above block of code runs, you will see the 'Hello World, Welcome to Node.js' output in the consol",
    "paragraph24": "fs.unlink() method is used to remove file asynchronously and fs.unlinkSync() method is used to remove file synchronously on your computer. fs.unlink() function has at least 2 parameter:",
    "paragraph25": "Parameter : File path",
    "paragraph26": "Parameter : Callback function",
    "paragraph27": "These functions take the file path as a parameter. However, the asynchronous version also takes a callback function as a parameter. It should definitely not be forgotten. If the file path is to be written, it should be written starting from the root directory. If you use the path module for this, it is easier.Let's continue with code sample below:"
}